{"version":3,"sources":["Str.js"],"names":["t","is","capitalize","ucfirst","lcfirst","true","contains","false","limit","isString","random","length"],"mappings":";;;;;AAAA;;;;AACA;;;;AAEA,mBAAK,4CAAL,EAAmD,aAAK;AACvDA,GAAEC,EAAF,CAAK,cAAI,cAAJ,EAAoBC,UAApB,EAAL,EAAuC,cAAvC;AACAF,GAAEC,EAAF,CAAK,cAAI,4BAAJ,EAAkCC,UAAlC,EAAL,EAAqD,4BAArD;AACA,CAHD;;AAKA,mBAAK,mDAAL,EAA0D,aAAK;AAC9DF,GAAEC,EAAF,CAAK,cAAI,cAAJ,EAAoBE,OAApB,EAAL,EAAoC,cAApC;AACAH,GAAEC,EAAF,CAAK,cAAI,WAAJ,EAAiBE,OAAjB,EAAL,EAAiC,WAAjC;AACA,CAHD;;AAKA,mBAAK,mDAAL,EAA0D,aAAK;AAC9DH,GAAEC,EAAF,CAAK,cAAI,cAAJ,EAAoBG,OAApB,EAAL,EAAoC,cAApC;AACAJ,GAAEC,EAAF,CAAK,cAAI,WAAJ,EAAiBG,OAAjB,EAAL,EAAiC,WAAjC;AACA,CAHD;;AAKA,mBAAK,8DAAL,EAAqE,aAAK;AAAA;AAAA;AAAA;;AACxEJ,GAAEK,IAAF,uBAAO,yBAAI,WAAJ,gCAAiBC,QAAjB,CAA0B,KAA1B,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACAN,GAAEO,KAAF,yBAAQ,0BAAI,WAAJ,gCAAiBD,QAAjB,CAA0B,KAA1B,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACDN,GAAEO,KAAF,yBAAQ,0BAAI,WAAJ,gCAAiBD,QAAjB,CAA0B,KAA1B,EAAiC,CAAjC,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,CAJD;;AAMA,mBAAK,0BAAL,EAAiC,aAAK;AACpCN,GAAEC,EAAF,CAAK,cAAI,4BAAJ,EAAkCO,KAAlC,CAAwC,EAAxC,CAAL,EAAkD,uBAAlD;AACAR,GAAEC,EAAF,CAAK,cAAI,4BAAJ,EAAkCO,KAAlC,CAAwC,EAAxC,EAA4C,KAA5C,CAAL,EAAyD,eAAzD;AACAR,GAAEC,EAAF,CAAK,cAAI,4BAAJ,EAAkCO,KAAlC,CAAwC,GAAxC,CAAL,EAAmD,4BAAnD;AACD,CAJD;;AAMA,mBAAK,oCAAL,EAA2C,aAAK;AAAA;;AAC9CR,GAAEK,IAAF,yBAAO,+CAAKI,QAAL,aAAc,sEAAMC,MAAN,EAAd,6BAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACAV,GAAEC,EAAF,CAAK,gBAAMS,MAAN,CAAa,EAAb,EAAiBC,MAAtB,EAA8B,EAA9B;AACDX,GAAEC,EAAF,CAAK,gBAAMS,MAAN,GAAeC,MAApB,EAA4B,EAA5B;AACA,CAJD","file":"Str.js","sourcesContent":["import test from 'ava';\nimport { str } from '../src';\n\ntest('it should captialize all words in a string', t => {\n\tt.is(str('foo bar baz!').capitalize(), 'Foo Bar Baz!');\n\tt.is(str('lorem ipsum dolor sit ameT').capitalize(), 'Lorem Ipsum Dolor Sit AmeT');\n});\n\ntest('it should captialize the first letter in a string', t => {\n\tt.is(str('foo bar baz!').ucfirst(), 'Foo bar baz!');\n\tt.is(str('foobarbaz').ucfirst(), 'Foobarbaz');\n});\n\ntest('it should lower case the first letter in a string', t => {\n\tt.is(str('Foo bar baz!').lcfirst(), 'foo bar baz!');\n\tt.is(str('FooBarBaz').lcfirst(), 'fooBarBaz');\n});\n\ntest('it should determine whether a string contains another string', t => {\n  t.true(str('foobarbaz').contains('bar'));\n  t.false(str('foobarbaz').contains('bob'));\n\tt.false(str('foobarbaz').contains('foo', 2));\n});\n\ntest('it should limit a string', t => {\n  t.is(str('Lorem ipsum dolor sit amet').limit(20), 'Lorem ipsum dolor siâ€¦');\n  t.is(str('Lorem ipsum dolor sit amet').limit(10, '***'), 'Lorem ipsu***');\n  t.is(str('Lorem ipsum dolor sit amet').limit(100), 'Lorem ipsum dolor sit amet');\n});\n\ntest('it should generate a random string', t => {\n  t.true(type.isString(str().random()));\n  t.is(str().random(16).length, 16);\n\tt.is(str().random().length, 32);\n});\n"]}