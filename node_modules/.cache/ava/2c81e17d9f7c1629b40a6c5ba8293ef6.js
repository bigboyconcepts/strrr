'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _powerAssertVisitorKeys = '{"ArrayExpression":["elements"],"AssignmentExpression":["left","right"],"BinaryExpression":["left","right"],"Directive":["value"],"DirectiveLiteral":[],"BlockStatement":["directives","body"],"BreakStatement":["label"],"CallExpression":["callee","arguments"],"CatchClause":["param","body"],"ConditionalExpression":["test","consequent","alternate"],"ContinueStatement":["label"],"DebuggerStatement":[],"DoWhileStatement":["test","body"],"EmptyStatement":[],"ExpressionStatement":["expression"],"File":["program"],"ForInStatement":["left","right","body"],"ForStatement":["init","test","update","body"],"FunctionDeclaration":["id","params","body","returnType","typeParameters"],"FunctionExpression":["id","params","body","returnType","typeParameters"],"Identifier":["typeAnnotation"],"IfStatement":["test","consequent","alternate"],"LabeledStatement":["label","body"],"StringLiteral":[],"NumericLiteral":[],"NullLiteral":[],"BooleanLiteral":[],"RegExpLiteral":[],"LogicalExpression":["left","right"],"MemberExpression":["object","property"],"NewExpression":["callee","arguments"],"Program":["directives","body"],"ObjectExpression":["properties"],"ObjectMethod":["key","params","body","decorators","returnType","typeParameters"],"ObjectProperty":["key","value","decorators"],"RestElement":["argument","typeAnnotation"],"ReturnStatement":["argument"],"SequenceExpression":["expressions"],"SwitchCase":["test","consequent"],"SwitchStatement":["discriminant","cases"],"ThisExpression":[],"ThrowStatement":["argument"],"TryStatement":["block","handler","finalizer"],"UnaryExpression":["argument"],"UpdateExpression":["argument"],"VariableDeclaration":["declarations"],"VariableDeclarator":["id","init"],"WhileStatement":["test","body"],"WithStatement":["object","body"],"AssignmentPattern":["left","right"],"ArrayPattern":["elements","typeAnnotation"],"ArrowFunctionExpression":["params","body","returnType","typeParameters"],"ClassBody":["body"],"ClassDeclaration":["id","body","superClass","mixins","typeParameters","superTypeParameters","implements","decorators"],"ClassExpression":["id","body","superClass","mixins","typeParameters","superTypeParameters","implements","decorators"],"ExportAllDeclaration":["source"],"ExportDefaultDeclaration":["declaration"],"ExportNamedDeclaration":["declaration","specifiers","source"],"ExportSpecifier":["local","exported"],"ForOfStatement":["left","right","body"],"ImportDeclaration":["specifiers","source"],"ImportDefaultSpecifier":["local"],"ImportNamespaceSpecifier":["local"],"ImportSpecifier":["local","imported"],"MetaProperty":["meta","property"],"ClassMethod":["key","params","body","decorators","returnType","typeParameters"],"ObjectPattern":["properties","typeAnnotation"],"SpreadElement":["argument"],"Super":[],"TaggedTemplateExpression":["tag","quasi"],"TemplateElement":[],"TemplateLiteral":["quasis","expressions"],"YieldExpression":["argument"],"AnyTypeAnnotation":[],"ArrayTypeAnnotation":["elementType"],"BooleanTypeAnnotation":[],"BooleanLiteralTypeAnnotation":[],"NullLiteralTypeAnnotation":[],"ClassImplements":["id","typeParameters"],"ClassProperty":["key","value","typeAnnotation","decorators"],"DeclareClass":["id","typeParameters","extends","body"],"DeclareFunction":["id"],"DeclareInterface":["id","typeParameters","extends","body"],"DeclareModule":["id","body"],"DeclareModuleExports":["typeAnnotation"],"DeclareTypeAlias":["id","typeParameters","right"],"DeclareVariable":["id"],"ExistentialTypeParam":[],"FunctionTypeAnnotation":["typeParameters","params","rest","returnType"],"FunctionTypeParam":["name","typeAnnotation"],"GenericTypeAnnotation":["id","typeParameters"],"InterfaceExtends":["id","typeParameters"],"InterfaceDeclaration":["id","typeParameters","extends","body"],"IntersectionTypeAnnotation":["types"],"MixedTypeAnnotation":[],"EmptyTypeAnnotation":[],"NullableTypeAnnotation":["typeAnnotation"],"NumericLiteralTypeAnnotation":[],"NumberTypeAnnotation":[],"StringLiteralTypeAnnotation":[],"StringTypeAnnotation":[],"ThisTypeAnnotation":[],"TupleTypeAnnotation":["types"],"TypeofTypeAnnotation":["argument"],"TypeAlias":["id","typeParameters","right"],"TypeAnnotation":["typeAnnotation"],"TypeCastExpression":["expression","typeAnnotation"],"TypeParameter":["bound"],"TypeParameterDeclaration":["params"],"TypeParameterInstantiation":["params"],"ObjectTypeAnnotation":["properties","indexers","callProperties"],"ObjectTypeCallProperty":["value"],"ObjectTypeIndexer":["id","key","value"],"ObjectTypeProperty":["key","value"],"ObjectTypeSpreadProperty":["argument"],"QualifiedTypeIdentifier":["id","qualification"],"UnionTypeAnnotation":["types"],"VoidTypeAnnotation":[],"JSXAttribute":["name","value"],"JSXClosingElement":["name"],"JSXElement":["openingElement","children","closingElement"],"JSXEmptyExpression":[],"JSXExpressionContainer":["expression"],"JSXSpreadChild":["expression"],"JSXIdentifier":[],"JSXMemberExpression":["object","property"],"JSXNamespacedName":["namespace","name"],"JSXOpeningElement":["name","attributes"],"JSXSpreadAttribute":["argument"],"JSXText":[],"Noop":[],"ParenthesizedExpression":["expression"],"AwaitExpression":["argument"],"ForAwaitStatement":["left","right","body"],"BindExpression":["object","callee"],"Import":[],"Decorator":["expression"],"DoExpression":["body"],"ExportDefaultSpecifier":["exported"],"ExportNamespaceSpecifier":["exported"],"RestProperty":["argument"],"SpreadProperty":["argument"]}',
    _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }();

var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _src = require('../src');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _ava2.default)('it should captialize all words in a string', function (t) {
	t.is((0, _src.str)('foo bar baz!').capitalize(), 'Foo Bar Baz!');
	t.is((0, _src.str)('lorem ipsum dolor sit ameT').capitalize(), 'Lorem Ipsum Dolor Sit AmeT');
});

(0, _ava2.default)('it should captialize the first letter in a string', function (t) {
	t.is((0, _src.str)('foo bar baz!').ucfirst(), 'Foo bar baz!');
	t.is((0, _src.str)('foobarbaz').ucfirst(), 'Foobarbaz');
});

(0, _ava2.default)('it should lower case the first letter in a string', function (t) {
	t.is((0, _src.str)('Foo bar baz!').lcfirst(), 'foo bar baz!');
	t.is((0, _src.str)('FooBarBaz').lcfirst(), 'fooBarBaz');
});

(0, _ava2.default)('it should determine whether a string contains another string', function (t) {
	var _rec = new _powerAssertRecorder(),
	    _rec2 = new _powerAssertRecorder(),
	    _rec3 = new _powerAssertRecorder();

	t.true(_rec._expr(_rec._capt(_rec._capt((0, _src.str)('foobarbaz'), 'arguments/0/callee/object').contains('bar'), 'arguments/0'), {
		content: 't.true(str(\'foobarbaz\').contains(\'bar\'))',
		filepath: 'test/Str.js',
		line: 20,
		ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"CallExpression","callee":{"type":"Identifier","name":"str","range":[7,10]},"arguments":[{"type":"StringLiteral","value":"foobarbaz","range":[11,22]}],"range":[7,23]},"property":{"type":"Identifier","name":"contains","range":[24,32]},"computed":false,"range":[7,32]},"arguments":[{"type":"StringLiteral","value":"bar","range":[33,38]}],"range":[7,39]}],"range":[0,40]}',
		tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"str","range":[7,10]},{"type":{"label":"("},"range":[10,11]},{"type":{"label":"string"},"value":"foobarbaz","range":[11,22]},{"type":{"label":")"},"range":[22,23]},{"type":{"label":"."},"range":[23,24]},{"type":{"label":"name"},"value":"contains","range":[24,32]},{"type":{"label":"("},"range":[32,33]},{"type":{"label":"string"},"value":"bar","range":[33,38]},{"type":{"label":")"},"range":[38,39]},{"type":{"label":")"},"range":[39,40]}]',
		visitorKeys: _powerAssertVisitorKeys
	}));
	t.false(_rec2._expr(_rec2._capt(_rec2._capt((0, _src.str)('foobarbaz'), 'arguments/0/callee/object').contains('bob'), 'arguments/0'), {
		content: 't.false(str(\'foobarbaz\').contains(\'bob\'))',
		filepath: 'test/Str.js',
		line: 21,
		ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"CallExpression","callee":{"type":"Identifier","name":"str","range":[8,11]},"arguments":[{"type":"StringLiteral","value":"foobarbaz","range":[12,23]}],"range":[8,24]},"property":{"type":"Identifier","name":"contains","range":[25,33]},"computed":false,"range":[8,33]},"arguments":[{"type":"StringLiteral","value":"bob","range":[34,39]}],"range":[8,40]}],"range":[0,41]}',
		tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"str","range":[8,11]},{"type":{"label":"("},"range":[11,12]},{"type":{"label":"string"},"value":"foobarbaz","range":[12,23]},{"type":{"label":")"},"range":[23,24]},{"type":{"label":"."},"range":[24,25]},{"type":{"label":"name"},"value":"contains","range":[25,33]},{"type":{"label":"("},"range":[33,34]},{"type":{"label":"string"},"value":"bob","range":[34,39]},{"type":{"label":")"},"range":[39,40]},{"type":{"label":")"},"range":[40,41]}]',
		visitorKeys: _powerAssertVisitorKeys
	}));
	t.false(_rec3._expr(_rec3._capt(_rec3._capt((0, _src.str)('foobarbaz'), 'arguments/0/callee/object').contains('foo', 2), 'arguments/0'), {
		content: 't.false(str(\'foobarbaz\').contains(\'foo\', 2))',
		filepath: 'test/Str.js',
		line: 22,
		ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"false","range":[2,7]},"computed":false,"range":[0,7]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"CallExpression","callee":{"type":"Identifier","name":"str","range":[8,11]},"arguments":[{"type":"StringLiteral","value":"foobarbaz","range":[12,23]}],"range":[8,24]},"property":{"type":"Identifier","name":"contains","range":[25,33]},"computed":false,"range":[8,33]},"arguments":[{"type":"StringLiteral","value":"foo","range":[34,39]},{"type":"NumericLiteral","value":2,"range":[41,42]}],"range":[8,43]}],"range":[0,44]}',
		tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"false"},"value":"false","range":[2,7]},{"type":{"label":"("},"range":[7,8]},{"type":{"label":"name"},"value":"str","range":[8,11]},{"type":{"label":"("},"range":[11,12]},{"type":{"label":"string"},"value":"foobarbaz","range":[12,23]},{"type":{"label":")"},"range":[23,24]},{"type":{"label":"."},"range":[24,25]},{"type":{"label":"name"},"value":"contains","range":[25,33]},{"type":{"label":"("},"range":[33,34]},{"type":{"label":"string"},"value":"foo","range":[34,39]},{"type":{"label":","},"range":[39,40]},{"type":{"label":"num"},"value":2,"range":[41,42]},{"type":{"label":")"},"range":[42,43]},{"type":{"label":")"},"range":[43,44]}]',
		visitorKeys: _powerAssertVisitorKeys
	}));
});

(0, _ava2.default)('it should limit a string', function (t) {
	t.is((0, _src.str)('Lorem ipsum dolor sit amet').limit(20), 'Lorem ipsum dolor si…');
	t.is((0, _src.str)('Lorem ipsum dolor sit amet').limit(10, '***'), 'Lorem ipsu***');
	t.is((0, _src.str)('Lorem ipsum dolor sit amet').limit(100), 'Lorem ipsum dolor sit amet');
});

(0, _ava2.default)('it should generate a random string', function (t) {
	var _rec4 = new _powerAssertRecorder();

	t.true(_rec4._expr(_rec4._capt(_rec4._capt(_typeof(_rec4._capt(_rec4._capt(_src.str, 'arguments/0/left/argument/callee/object').random(), 'arguments/0/left/argument')), 'arguments/0/left') === 'string', 'arguments/0'), {
		content: 't.true(typeof str.random() === \'string\')',
		filepath: 'test/Str.js',
		line: 32,
		ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"BinaryExpression","operator":"===","left":{"type":"UnaryExpression","operator":"typeof","argument":{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"str","range":[14,17]},"property":{"type":"Identifier","name":"random","range":[18,24]},"computed":false,"range":[14,24]},"arguments":[],"range":[14,26]},"prefix":true,"range":[7,26]},"right":{"type":"StringLiteral","value":"string","range":[31,39]},"range":[7,39]}],"range":[0,40]}',
		tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"typeof"},"value":"typeof","range":[7,13]},{"type":{"label":"name"},"value":"str","range":[14,17]},{"type":{"label":"."},"range":[17,18]},{"type":{"label":"name"},"value":"random","range":[18,24]},{"type":{"label":"("},"range":[24,25]},{"type":{"label":")"},"range":[25,26]},{"type":{"label":"==/!="},"value":"===","range":[27,30]},{"type":{"label":"string"},"value":"string","range":[31,39]},{"type":{"label":")"},"range":[39,40]}]',
		visitorKeys: _powerAssertVisitorKeys
	}));
	t.is((0, _src.str)().random(16).length, 16);
	t.is((0, _src.str)().random().length, 32);
});
//# sourceMappingURL=../node_modules/.cache/ava/2c81e17d9f7c1629b40a6c5ba8293ef6.js.map